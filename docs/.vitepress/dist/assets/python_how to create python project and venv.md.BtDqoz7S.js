import{_ as a,c as e,a0 as i,o as t}from"./chunks/framework.JzHwdSDT.js";const k=JSON.parse('{"title":"How to Create a Python Project and Virtual Environment","description":"","frontmatter":{},"headers":[],"relativePath":"python/how to create python project and venv.md","filePath":"python/how to create python project and venv.md"}'),n={name:"python/how to create python project and venv.md"};function l(p,s,h,o,r,d){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="how-to-create-a-python-project-and-virtual-environment" tabindex="-1">How to Create a Python Project and Virtual Environment <a class="header-anchor" href="#how-to-create-a-python-project-and-virtual-environment" aria-label="Permalink to &quot;How to Create a Python Project and Virtual Environment&quot;">​</a></h1><blockquote><p>2024-11-27 daxiang</p></blockquote><p>This guide walks you through creating a Python project, setting up a virtual environment, and solving common activation issues.</p><hr><h2 id="steps-to-create-a-python-project-and-virtual-environment" tabindex="-1">Steps to Create a Python Project and Virtual Environment <a class="header-anchor" href="#steps-to-create-a-python-project-and-virtual-environment" aria-label="Permalink to &quot;Steps to Create a Python Project and Virtual Environment&quot;">​</a></h2><h3 id="_1-create-a-project-folder" tabindex="-1">1. Create a Project Folder <a class="header-anchor" href="#_1-create-a-project-folder" aria-label="Permalink to &quot;1. Create a Project Folder&quot;">​</a></h3><p>Open a terminal and run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span></code></pre></div><h3 id="_2-create-a-virtual-environment" tabindex="-1">2. Create a Virtual Environment <a class="header-anchor" href="#_2-create-a-virtual-environment" aria-label="Permalink to &quot;2. Create a Virtual Environment&quot;">​</a></h3><p>Run the following command to create a virtual environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span></span></code></pre></div><h3 id="_3-activate-the-virtual-environment" tabindex="-1">3. Activate the Virtual Environment <a class="header-anchor" href="#_3-activate-the-virtual-environment" aria-label="Permalink to &quot;3. Activate the Virtual Environment&quot;">​</a></h3><p>Activate the virtual environment based on your operating system:</p><ul><li><strong>Windows (PowerShell)</strong>:<div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">venv\\Scripts\\activate</span></span></code></pre></div></li><li><strong>macOS/Linux</strong>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv/bin/activate</span></span></code></pre></div></li></ul><p>You’ll see <code>(venv)</code> at the start of your terminal, indicating the virtual environment is active.</p><h3 id="_4-install-dependencies" tabindex="-1">4. Install Dependencies <a class="header-anchor" href="#_4-install-dependencies" aria-label="Permalink to &quot;4. Install Dependencies&quot;">​</a></h3><p>Install any required Python packages using <code>pip</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">package_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="_5-save-installed-dependencies" tabindex="-1">5. Save Installed Dependencies <a class="header-anchor" href="#_5-save-installed-dependencies" aria-label="Permalink to &quot;5. Save Installed Dependencies&quot;">​</a></h3><p>Save the installed packages to a <code>requirements.txt</code> file:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> freeze</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><h3 id="_6-deactivate-the-virtual-environment" tabindex="-1">6. Deactivate the Virtual Environment <a class="header-anchor" href="#_6-deactivate-the-virtual-environment" aria-label="Permalink to &quot;6. Deactivate the Virtual Environment&quot;">​</a></h3><p>After you’re done, deactivate the virtual environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deactivate</span></span></code></pre></div><hr><h2 id="common-issue-script-execution-policy-error-on-windows" tabindex="-1">Common Issue: Script Execution Policy Error on Windows <a class="header-anchor" href="#common-issue-script-execution-policy-error-on-windows" aria-label="Permalink to &quot;Common Issue: Script Execution Policy Error on Windows&quot;">​</a></h2><p>When activating the virtual environment in PowerShell, you may see this error:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>venv\\Scripts\\activate : File cannot be loaded because running scripts is disabled on this system.</span></span></code></pre></div><h3 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h3><ol><li><p>Open PowerShell and check the current execution policy:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Get-ExecutionPolicy</span></span></code></pre></div></li><li><p>If the policy is <code>Restricted</code>, change it to <code>RemoteSigned</code> for the current user:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set-ExecutionPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RemoteSigned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope CurrentUser</span></span></code></pre></div></li><li><p>Try activating the virtual environment again:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">venv\\Scripts\\activate</span></span></code></pre></div></li><li><p>If needed, revert the policy to <code>Restricted</code> after finishing your work:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set-ExecutionPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Restricted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope CurrentUser</span></span></code></pre></div></li></ol><hr><h2 id="summary-of-commands" tabindex="-1">Summary of Commands <a class="header-anchor" href="#summary-of-commands" aria-label="Permalink to &quot;Summary of Commands&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create project folder</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create virtual environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Activate virtual environment</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows (PowerShell):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">venv\\Scripts\\activate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS/Linux:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv/bin/activate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">package_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Save dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> freeze</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Deactivate virtual environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deactivate</span></span></code></pre></div><p>With these steps, you can easily set up and manage Python projects with virtual environments.</p><h2 id="installing-dependencies-using-requirements-txt" tabindex="-1">Installing Dependencies Using <code>requirements.txt</code> <a class="header-anchor" href="#installing-dependencies-using-requirements-txt" aria-label="Permalink to &quot;Installing Dependencies Using \`requirements.txt\`&quot;">​</a></h2><p>To install the required packages specified in the <code>requirements.txt</code> file, follow these steps:</p><ol><li><p><strong>Ensure Python and <code>pip</code> are installed</strong><br> Before starting, make sure that Python and <code>pip</code> (Python&#39;s package installer) are installed on your system. You can check by running the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div></li><li><p><strong>Navigate to your project directory</strong><br> Open your terminal (Command Prompt, PowerShell, or terminal emulator) and navigate to the directory containing the <code>requirements.txt</code> file:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/your/project</span></span></code></pre></div></li><li><p><strong>Install dependencies</strong><br> Once you&#39;re in the project directory, use the following command to install all dependencies listed in <code>requirements.txt</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><p>This will automatically download and install all the packages required for your project.</p></li><li><p><strong>Verify installation</strong><br> After installation, you can verify that the packages were successfully installed by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><p>This will display a list of all installed packages, including those specified in <code>requirements.txt</code>.</p></li></ol><p>You can copy this content directly into your markdown file.</p>`,38)]))}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
